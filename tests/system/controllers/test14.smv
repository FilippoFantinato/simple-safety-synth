MODULE main
--latches
VAR
u : boolean;
phi.EBR_0_SPECF_1 : boolean;
phi.EBR_0_COUNTER_2 : boolean;
phi.EBR_0_SPECF_4 : boolean;
phi.EBR_0_COUNTER_1 : boolean;
phi.EBR_0_SPECF_3 : boolean;
phi.EBR_0_COUNTER_0 : boolean;
phi.EBR_0_SPECF_2 : boolean;
phi.EBR_0_ERROR_0 : boolean;
phi.EBR_0_SPECF_5 : boolean;
ASSIGN
init(phi.EBR_0_SPECF_1) := FALSE;
next(phi.EBR_0_SPECF_1) := phi.EBR_0_SPECF_2;
init(phi.EBR_0_COUNTER_2) := FALSE;
next(phi.EBR_0_COUNTER_2) := !a28;
init(phi.EBR_0_SPECF_4) := FALSE;
next(phi.EBR_0_SPECF_4) := u;
init(phi.EBR_0_COUNTER_1) := FALSE;
next(phi.EBR_0_COUNTER_1) := !a42;
init(phi.EBR_0_SPECF_3) := FALSE;
next(phi.EBR_0_SPECF_3) := a44;
init(phi.EBR_0_COUNTER_0) := FALSE;
next(phi.EBR_0_COUNTER_0) := !a52;
init(phi.EBR_0_SPECF_2) := FALSE;
next(phi.EBR_0_SPECF_2) := a4;
init(phi.EBR_0_ERROR_0) := FALSE;
next(phi.EBR_0_ERROR_0) := !a92;
init(phi.EBR_0_SPECF_5) := FALSE;
next(phi.EBR_0_SPECF_5) := phi.EBR_0_SPECF_4;
DEFINE
--ands
a14 := phi.EBR_0_COUNTER_0 & phi.EBR_0_COUNTER_1;
a18 := a14 & phi.EBR_0_COUNTER_2;
a20 := phi.EBR_0_COUNTER_1 & phi.EBR_0_COUNTER_0;
a22 := a20 & phi.EBR_0_COUNTER_2;
a24 := !phi.EBR_0_COUNTER_2 & !a20;
a26 := !a22 & !a24;
a28 := !a18 & !a26;
a32 := phi.EBR_0_COUNTER_0 & phi.EBR_0_COUNTER_1;
a34 := a32 & phi.EBR_0_COUNTER_2;
a36 := phi.EBR_0_COUNTER_0 & phi.EBR_0_COUNTER_1;
a38 := !phi.EBR_0_COUNTER_1 & !phi.EBR_0_COUNTER_0;
a40 := !a36 & !a38;
a42 := !a34 & !a40;
a44 := a4 & phi.EBR_0_SPECF_4;
a48 := phi.EBR_0_COUNTER_0 & phi.EBR_0_COUNTER_1;
a50 := a48 & phi.EBR_0_COUNTER_2;
a52 := !a50 & phi.EBR_0_COUNTER_0;
a56 := !phi.EBR_0_COUNTER_2 & !phi.EBR_0_COUNTER_1;
a58 := phi.EBR_0_COUNTER_1 & phi.EBR_0_COUNTER_0;
a60 := !phi.EBR_0_COUNTER_2 & !a58;
a62 := !a56 & a60;
a64 := a4 & phi.EBR_0_SPECF_4;
a68 := a64 & phi.EBR_0_SPECF_5;
a70 := !phi.EBR_0_SPECF_3 & !a68;
a72 := !phi.EBR_0_SPECF_1 & a70;
a74 := a62 & a72;
a76 := TRUE & FALSE;
a78 := FALSE & FALSE;
a80 := !a76 & !a78;
a82 := a74 & TRUE;
a84 := !a74 & !a80;
a86 := !a82 & !a84;
a88 := phi.EBR_0_ERROR_0 & TRUE;
a90 := !phi.EBR_0_ERROR_0 & !a86;
a92 := !a88 & !a90;
a4 := TRUE & TRUE;
--outputs
formula := !phi.EBR_0_ERROR_0;
c := a4;
LTLSPEC G(formula)
